#include <iostream>
#include <vector>

using namespace std;

constexpr int n = 10001;

int main()
{
	cin.tie(0);
	ios_base::sync_with_stdio(false);

	vector<vector<int>> dp(n, vector<int>(4, 0));
	dp[1][1] = 1;

	dp[2][1] = 1;
	dp[2][2] = 1;

	dp[3][1] = 2;
	dp[3][2] = 0;
	dp[3][3] = 1;

	for (int i = 4; i < n; ++i)
	{
		dp[i][1] = dp[i - 1][1] + dp[i - 1][2] + dp[i - 1][3];
		dp[i][2] = dp[i - 2][2] + dp[i - 2][3];
		dp[i][3] = dp[i - 3][3];
	}

	int testcase;
	cin >> testcase;
	while (testcase--)
	{
		int input;
		cin >> input;

		int sum = 0;
		for (int v : dp[input])
			sum += v;

		cout << sum << "\n";
	}
	return 0;
}

/*
1 : 1

2 : 1 + 1
	2

3 : 1 + 1 + 1
	2 + 1,
	3


4 : 1 + 1 + 1 + 1
	2 + 1 + 1
	3 + 1
	2 + 2 x
= 4


5 : 1 + 1 + 1 + 1 + 1
	2 + 1 + 1 + 1
	2 + 2 + 1
	3 + 1 + 1
	3 + 2 x
= 5


6 : 1 + 1 + 1 + 1 + 1 + 1
	2 + 1 + 1 + 1 + 1
	2 + 2 + 1 + 1
	3 + 1 + 1 + 1
	3 + 2 + 1
	2 + 2 + 2 x
	3 + 3 x
= 7


7 : 1 + 1 + 1 + 1 + 1 + 1 + 1
	2 + 1 + 1 + 1 + 1 + 1
	2 + 2 + 1 + 1 + 1
	3 + 1 + 1 + 1 + 1
	3 + 2 + 1 + 1
	2 + 2 + 2 + 1
	3 + 3 + 1
	3 + 2 + 2
= 8

8 : 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	2 + 1 + 1 + 1 + 1 + 1 + 1
	2 + 2 + 1 + 1 + 1 + 1
	3 + 1 + 1 + 1 + 1 + 1
	3 + 2 + 1 + 1 + 1
	2 + 2 + 2 + 1 + 1
	3 + 3 + 1 + 1
	3 + 2 + 2 + 1
	2 + 2 + 2 + 2
	3 + 3 + 2
= 10


9 : 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	2 + 1 + 1 + 1 + 1 + 1 + 1 + 1
	2 + 2 + 1 + 1 + 1 + 1 + 1
	3 + 1 + 1 + 1 + 1 + 1 + 1
	3 + 2 + 1 + 1 + 1 + 1
	2 + 2 + 2 + 1 + 1 + 1
	3 + 3 + 1 + 1 + 1
	3 + 2 + 2 + 1 + 1
	2 + 2 + 2 + 2 + 1
	3 + 3 + 2 + 1
	3 + 2 + 2 + 2
	3 + 3 + 3
= 12
*/
